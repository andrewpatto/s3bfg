name: Rust Release

on:
  release:
    types: [released]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Release

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            musl: true
            artifact_name: s3bfg
            asset_name: s3bfg-linux-amd64
          - os: ubuntu-18.04
            musl: false
            artifact_name: s3bfg
            asset_name: s3bfg-linux-musl
          - os: macos-latest
            musl: false
            artifact_name: s3bfg
            asset_name: s3bfg-macos-amd64

    steps:
    - uses: actions/checkout@v2

    - name: Put the Release Version into Environment
      run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}

    - name: Build (regular)
      if: !matrix.musl
      run: cargo build --release

    - name: Build (musl)
      if: matrix.musl
      uses: ./musl
      with:
        args: "cargo build --target x86_64-unknown-linux-musl --release"

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}-${{ env.RELEASE_VERSION }}
        asset_content_type: application/octet-stream
